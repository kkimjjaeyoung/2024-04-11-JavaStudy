/*
 * 	자바의 기본문법
 * 		1). 데이터 저장 : 변수/상수, 배열
 * 						변수:데이터를 하나만 저장, 변경해서 사용 가능(메모리 공간 크기 결정[정수, 실수, 문자, 논리], 기본 저장 크기 사용)
 * 						상수:데이터를 하나만 저장, 변경할 수 없는 공간
 * 						배열:여러개를 동시에 저장(같은 형만 저장 가능)
 * 						클래스:여러개를 동시에 저장(다른 데이터형을 저장 가능)
 * 		2). 데이터 가공(사용자 요청시) : 연산자/제어문(메소드)
 * 		3). 가공된 데이터 출력 : 명령프롬프트(Application[윈도우]), 브라우저(Web Application), 핸드폰(Mobile Application)
 * 		4). 데이터 분석 : 파이썬
 * 	객체 지향 프로그램
 * 	예외처리
 * 	라이브러리 활용
 * 
 * 	1. 오라클 연결
 * 	2. WEB->JSP->JQuery(Ajax)=1차 프로젝트
 * 	3. Spring->VueJS=2차 프로젝트
 * 	4. Spring-Boot->React=3차 프로젝트(개인)
 * 	5. Python : Numpy, Pandas, Matplotlib
 * 	6. AWS (클라우드)->호스팅
 * 		**Full Stack : JavaScript->동적페이지
 * 			JQuery(Ajax), VueJS, React(redux, react-Query)
 * 				***TypeScript, NextJS
 * 		입문과정->입사(실무)(이력서 제출)
 * 		Ordre
 */

/*
 * 	연산자
 * 	1. 메모리에 별칭 설정(주소 대신 이름으로 저장)
 * 		식별자 : 1).한개의 클래스 내에서는 같은 변수명 사용 불가(알파벳이나 한글로 시작, 대소문자 구분)
 * 				2).문자의 갯수는 제한없으나 알아볼정도(3~10)
 * 				3). 숫자 사용 가능(첫문자 불가), 특수문자 사용(_, $)
 * 				4). 자바에서 사용하는 문자열 사용 불가(키워드:int, double)
 * 				5). 공백 사용 불가
 * 	2. 메모리 크기(데이터형)
 * 		1)정수
 * 			byte(1byte = -128~127, 네트워크 통신, 외부데이터 읽기[크롤링], 파일 업/다운로드)= byte 변수명=값, 결과값은 int로 연산
 * 			int(4byte = -21억 4천~21억 4천, 가장 많이 사용[기본값])= int 변수명=값
 * 			long(8byte = , 금융권, 빅테이터, AI, 큰값에 설정[파일크기])= long 변수명=값
 * 			*구분자 
 * 			int a=100 -> 4byte, long b=100L -> 8byte
 * 		2)실수(소수점 저장)
 * 			float(4byte = )= float 변수명=값(F/f)
 * 			double(8byte = 소수점 15자리까지, 가장 많이 사용됨, 컴퓨터에 실수가 잆는 경우)= double 변수명=값
 * 		3)문자(음수가 존재하지 않음)
 * 			char(2byte = 0~65535, 유니코드[호환성 높음])= char 변수명='문자', 연산처리시 정수형으로 변경['A'=64, 'a'=97, '0'=48]
 * 		4)논리(true/false만 저장 가능)
 * 			boolean( - )= boolean 변수명=true/false, 크기비교 불가, 연산자[부정연산자, 비교연산자, 논리연산자, 삼향연산자]
 * 		5)참조형 : 배열, 클래스(메모리 주소 이용)
 * 	3. 변수 형식(사용시 반드시 변수명=값을 대입해야 사용 가능)
 * 			정수 : byte;
 * 					b=10;
 * 					int a=10;
 * 					long l=100L
 * 	4. 초기값(임의로 지정, 변수라 필요시 변경 가능)
 * 		1) 선언 후 초기값 부여(사용자로부터 값을 받을 경우, 난수)
 * 		2) 선언과 동시에 초기값 부여
 */

/*
 * 	연산처리
 * 		피연산자/연산자 : 10(피연산자) + 10(피연산자)
 * 	1. 단항연산자:연산 대상이 1개
 * 		증감연산자 : 1개 증가/감소(++,--)		int a=10;	a++;	a=11
 * 		부정연산자 : ture/false를 반대로 한다(!) boolean만 사용 가능	boolean b=true	!b	b=false
 * 		형변환 연산자 : 모든 데이터형은 변경가능(boolean제외)	10.5=double	(int)10.5=10
 * 	2. 이향연산자:연산 대상이 2개
 * 		산술연산자 : 오칙연산(+, -, *, /, %)
 * 		비교연산자 : 결과값이 boolean으로만 출력, 왼쪽 연산자가 기준점 (==, !=, <, >, <=, >=)		6==7->flase		6!=7->true
 * 		논리연산자 : 겺과값이 boolean오로만 출력(&&[직렬연산자] : 범위, 기간 안에 있는 경우, ||[병렬연산자] : 범위나 기간을 벗어나는 경우)
 * 		대입연산자 : 범위값을 다시 저장할 경우(=, +=, -=, *=, /=, %= ....)
 * 	3. 삼항연산자:연산 대상이 3개(페이징, 복합한 소스 코딩의 경우)
 * 		(조건)?값1:값2 (조건이 ture면 값1, false면 값2)
 *  ***자바의 모든 연산은 같은 데이터형끼리만 가능(다른경우 큰 데이터형으로 변경 후 연산)(byte<char<int<long<float<double)[byte+byte=char+char=byte+char=int(int보다 작은 데이터형은 연산시 int)]
 *  		: 0으로 나누면 오류, 정수/정수=정수. 정수/정수=실수(소수점)
 *  		: % 5%2=1,	5%-2=1	-5%2=-1	-5%-2=-1 (나머지 연산시 왼쪽 부호를 따라간다)
 */

public class 연산자_1 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int kor=80;
		int eng=75;
		int math=90;
		int total=kor+eng+math;
		double avg=total/3.0;
		System.out.println("국어 점수:"+kor);
		System.out.println("영어 점수:"+eng);
		System.out.println("수학 점수:"+math);
		System.out.println("총점:"+total);
		System.out.println("평균:"+avg);
	}

}
