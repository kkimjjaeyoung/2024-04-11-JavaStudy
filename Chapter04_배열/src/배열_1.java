/*
 * 데이터 저장
 *  데이터 한개 저장 : 변수
 *  데이터 여러개 저장 : 배열, 클래스
 *  	배열 : 같은 데이터 여러개를 모아서 관리(한개의 이름으로 처리)
 *  		장점 : 변수 여러개를 한개의 이름으로 제어 가느반복문 사용 편리), 연속적 메모리 공간생성
 *  		단점 : 고정적이다(추가, 삭제가 어렵다), 같은 데이터만 모을수 있다(가변형이고 다른 데이터형을 모아 관리 가능한 컬렉션 사용)
 *  	클래스 : 다른 데이터를 여러개 모아서 관리
 * 데이터 가공 : 명령문을 모아서 관리 
 *  사용자 입력 부분, 사용자 요청 처리 부분, 결과값 도출
 * 		 : 재사용과 유지보수가 편리. (변수+메소드->클래스)
 * 			변수 =>100개 a1~a100 최대,최솟값   if->99
 * 		메소드 : 목록 출력, 글씨기, 상세보기, 삭제, 수정, 검색 기능.
 * 화면에 출력
 * 
 * 		변수/배열/클래스 : 메모리(RAM)에 저장되어 프로그램 종료 시 삭제됨. 영구적 저장장치(파일, RDBMS) 사용으로 해결
 * 			파일 : 여러 파일을 연결해 사용하기 어렵고 보안에 취약함
 * 			RDBMS : 관계형 데이터베이스
 * 			파일 -> table 	
 */

/*
 *  1. 변수 여러개를 모아서 관리
 *  	(데이터형)[] (배열명)=new (데이터형)[저장하는 개수]
 *  	int a, b, c, d, e, f, g;			
 *  		->	int [] arr=new int[7]			//7개의 int 변수를 모은다
 *  	double d1, d2, d3, d4...
 *  		->	double[] arr-new double(갯수)		//'갯수'의 double형을 모아서 관리
 */
public class 배열_1 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
